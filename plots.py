import matplotlib.pyplot as plt
import numpy as np
# from matplotlib import rc
# rc('text', usetex=True)
# font = {'family': 'sans-serif',
#         'weight': 'bold',
#         'size': 22}
# rc('font', **font)

SMALL_SIZE = 26
MEDIUM_SIZE = 26
BIGGER_SIZE = 26

plt.rc('font', family='sans-serif')
plt.rc('font', weight='bold')
plt.rc('font', size=SMALL_SIZE)          # controls default text sizes
plt.rc('axes', titlesize=SMALL_SIZE)     # fontsize of the axes title
plt.rc('axes', labelsize=MEDIUM_SIZE)    # fontsize of the x and y labels
plt.rc('xtick', labelsize=SMALL_SIZE)    # fontsize of the tick labels
plt.rc('ytick', labelsize=SMALL_SIZE)    # fontsize of the tick labels
plt.rc('legend', fontsize=SMALL_SIZE)    # legend fontsize
plt.rc('figure', titlesize=BIGGER_SIZE)  # fontsize of the figure title

plt.figure(1, figsize=(16, 9), frameon=False, dpi=100)

# ITL with CVX
itl_with_cvx = 16.8284
plt.plot(range(51), itl_with_cvx * np.ones(51), label='ITL with CVX')

# ITL SGD with 1 epoch
itl_sgd_1_epoch = 0.4290
plt.plot(range(51), itl_sgd_1_epoch * np.ones(51), label='ITL with SGD (1 epoch)')

# ITL SGD with 100 epoch
itl_sgd_100_epoch = 12.7091
plt.plot(range(51), itl_sgd_100_epoch * np.ones(51), label='ITL with SGD (100 epochs)')

# LTL with full CVX
ltl_with_full_cvx = [7.872397622915208, 16.615213996784846, 17.593212472347975, 18.029747207816975, 18.21402318544409, 18.467173763813395, 18.610152090956678, 18.7113221551686, 18.78352862509396, 18.86769040254833, 18.974485097332767,
                     19.05814314167818, 19.134389552830076, 19.190765573545317, 19.22161387446494, 19.29942895116486, 19.369843814545323, 19.436399580486352, 19.494034857317452, 19.528231270589337, 19.554255299276015, 19.603076820281803,
                     19.656068519422114,19.69915597596775, 19.73690280187555, 19.771128514200644, 19.803761208048364, 19.83302966789835, 19.854633542644127, 19.879921431896822, 19.90507672186065, 19.928193951065648, 19.9448930279461,
                     19.968091093922162, 19.995676556356937,20.016730974092035, 20.034215668836236, 20.04978651648671, 20.063129926998414, 20.0743006266309, 20.084198059690387, 20.09080781864712, 20.093880987289918, 20.093866316114415,
                     20.095472026947693, 20.09371257145938, 20.089555371250892, 20.08493595204212, 20.081388031067096,20.077033051811178, 20.07275435360734]
plt.plot(range(51), ltl_with_full_cvx, label='LTL with CVX instead of SGD for inner')

# LTL SGD with 1 epoch
ltl_sgd_1_epoch = [0.035670500295182386, 0.0475862082348983, 0.07705583668267438, 0.06376452228234535, 0.09368032475905921, 0.08802917389004765, 0.09798951870037473, 0.06420080903437397, 0.07963397987674874, 0.09453981623827017,
                   0.09095175815387196, 0.06897572600482624, 0.10679030288544397, 0.09589035503968901, 0.0868796248909428, 0.08450910688976469, 0.07620535168669698, 0.0949618847860629, 0.09600716367794496, 0.0928386956346615,
                   0.09889239489721004, 0.12633053523483012, 0.09599215256824867, 0.10694133841847706, 0.11026818718293668, 0.08762793015999557, 0.09637298854793849, 0.12012964082622701, 0.09771408083405485, 0.11507037515713216,
                   0.09084163476645754, 0.11672119255718787, 0.08861074444299592, 0.09421775245167942, 0.10681882423112435, 0.08228786220801637, 0.09603121495376744, 0.1188627425534995, 0.10726831987898791, 0.11971280686269943,
                   0.12018077664639384, 0.10902066641728701, 0.12841467542648255, 0.10568524924661633, 0.10961711559812966, 0.1278302429736042, 0.13845161792343133, 0.14624174963579983, 0.11608622179934486, 0.11376547838188185,
                   0.14211961484937805]
plt.plot(range(51), ltl_sgd_1_epoch, label='LTL with SGD for inner (1 epoch)')


# LTL SGD with 10 epoch
ltl_sgd_10_epoch = [0.4529365661519233, 0.47214376748189923, 0.41819426485782174, 0.5058454667284549, 0.4221353561107524, 0.4483940561035934, 0.4724608125121043, 0.43784946934361874, 0.4809592490836829, 0.4418600140322225,
                    0.48525088473816014, 0.4549404060045859, 0.46839229802196936, 0.48010279289463287, 0.4877130872184318, 0.5052697715983404, 0.5059557366755206, 0.4873170604027833, 0.5056149771620152, 0.47636465196635003,
                    0.49739303112044025, 0.4937057756324157, 0.4954090578911372, 0.5177930284330815, 0.5414192635510351, 0.5213712095229317, 0.5456625428171897, 0.5012838835890923, 0.5068377174204313, 0.5470687862985886,
                    0.5299966478785897, 0.5062333681579566, 0.5187368181030887, 0.5392597606126074, 0.5398863902757617, 0.529735615480085, 0.5148468020223694, 0.533119435662521, 0.5175220375983961, 0.5214326079732912, 0.5438474474225937,
                    0.5746605997043065, 0.5723834114605527, 0.5437923206905687, 0.5222358620241775, 0.5767940884734057, 0.5718762894734001, 0.5559507084042089, 0.56688374634441, 0.5497757985556014, 0.5398239086799911]
plt.plot(range(51), ltl_sgd_10_epoch, label='LTL with SGD for inner (10 epoch)')


# LTL CVX with SGD 1 epoch mix
temp = [0.20314632818219955, 1.2566323573889175, 1.3025836526708001, 1.553295844510185, 1.7721053246031262, 1.938162846793402, 1.5378472472991653, 1.875569239904047, 1.6912300896510426, 2.209784839570045,
        2.2824352158197008, 2.039732717864958, 1.967151387878526, 1.6203421003106864, 1.431908445262853, 2.3153205690783487, 2.7226209907745305, 2.707601367901815, 1.656408594211419, 2.245200080591308, 2.725882560026565,
        2.294845668546767, 2.0953836973261786, 1.9975855264259588, 1.7554570990970217, 2.4142623853359986, 2.779737375812986, 2.810707595134897, 2.745448779758098, 2.2739500821978424, 2.047360940776769,
        3.0329195809013014, 3.2774023779378716, 2.8277973196903172, 2.6460277922141393, 2.7169949453676923, 2.483821150121195, 2.3158584706896863, 2.4176237592622525, 2.389823377810062, 2.251954593388071, 2.6762611981045388,
        2.2312364282553974, 2.8923163071394273, 2.1111971843913078, 2.5953315829309704, 2.3424649600752425, 2.1285803794582847, 2.814190066011129, 1.938180511931572, 2.2403604922254456]
ltl_cvx_and_sgd_1_epoch = []
for val_idx, val in enumerate(temp):
    if val_idx > 0:
        ltl_cvx_and_sgd_1_epoch.append(np.mean(temp[:val_idx]))
    else:
        ltl_cvx_and_sgd_1_epoch.append(temp[0])
plt.plot(range(51), ltl_cvx_and_sgd_1_epoch, label='LTL with CVX for training and SGD (1 epoch) for testing')

plt.legend()

# plt.title("Schools dataset. Parameters selected through " + r"$\bf{" + 'VALIDATION + "}$" + " for EVERY method.')
plt.title("Schools dataset. Parameters selected through " + "VALIDATION" + " for EVERY method.")
plt.xlabel('Training tasks')
plt.ylabel('Explained Variance')

plt.pause(0.1)
